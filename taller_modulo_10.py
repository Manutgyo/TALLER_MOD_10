# -*- coding: utf-8 -*-
"""Taller_Módulo_10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FMvTMMkj_ueHGdEbQkhCKwySXfbvpJL8

Entrega Taller módulo 10 -----
Nombre: Manuela Tamayo Garcia
"""

pip install sodapy

#Importación de los datos
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sodapy import Socrata

client = Socrata("www.datos.gov.co", None)
results = client.get("32sa-8pi3")
df = pd.DataFrame.from_records(results)
#print(df.head())

#Cálculos matemáticos y resumen numérico
valor = list(df["valor"])
trm = valor[::-1]
trm = np.array(trm)
trm_ajustada = trm.astype(float)
promedio = trm_ajustada.mean()
print("Promedio:", promedio)
mediana = np.median(trm_ajustada)
print("Mediana:",mediana)
desvesta = trm_ajustada.std()
print("Desviación estándar:", desvesta)
maximo = max(trm_ajustada)
print("Dato máximo:", maximo)
minimo = trm_ajustada.min()
print("Dato mínimo:", minimo)
rango = maximo-minimo
print("Rango:", rango)

#Gráfico 1 - Diagrama de dispersión
tiempo = list(df["vigenciadesde"])
tiempo = tiempo [::-1]
fecha = list()
for i in tiempo:
    separacion = i.split("T")
    dia = separacion[0]
    fecha.append(dia)

plt.scatter(fecha, trm_ajustada)
plt.title("Diagrama de dispersión TRM vs Tiempo")
plt.xlabel("Tiempo")
plt.ylabel("TRM")
plt.xticks(range(0, len(fecha)-1, 100), rotation = 45)
plt.show()

"""En la gráfica anterior se puede identificar la tendencia creciente de la TRM con el paso del tiempo, lo que refleja claramente la depreciación del COP (Peso colombiano) frente al USD (Dólar estadounidense)."""

#Diagrama de líneas
plt.plot(fecha, trm_ajustada, color="purple")
plt.title("Diagrama de líneas TRM")
plt.xlabel("Tiempo")
plt.ylabel("TRM")
plt.xticks(range(0, len(fecha)-1, 100), rotation = 45)
plt.show()

"""Similar a la gráfica anterior pero está vez en líneas, se pueden identificar períodos de súbito crecimiento como se dio entre 2020-2021, por la pandemia y los efectos del paro nacional, a mediados de 2022, por temores internacionales frente al ambiente político y económico del país, y de importante relevancia en la gráfica, el salto a más de los 5000 COP en octubre. Si hay algo que se puede analizar de la gráfica es que entre 2015-2018, la TRM se mantuvo muy estable por encima de los 3000 COP con apenas variaciones significantes"""

#Importación de otro documento en Socrata
client2 = Socrata("www.datos.gov.co", None)
results2 = client2.get("u8ud-84pb")
df2 = pd.DataFrame.from_records(results2)
df2 = df2.sort_values("nombreentidad")
df2 = df2.set_index("nombreentidad")
#print(df2.head())

#Cálculos estadísticos
#print(df2.keys())
valores = list(df2["_8_tasa_efectiva_promedio"])
tasa = np.array(valores)
tasa = tasa.astype(float)
#print(tasa)

#Calculando estadísticas de la tasa - Agrupación Tasa
promedio = tasa.mean()
print("Promedio:", promedio)
mediana = np.median(tasa)
print("Mediana:",mediana)
desvesta = tasa.std()
print("Desviación estándar:", desvesta)
maximo = max(tasa)
print("Dato máximo:", maximo)
minimo = tasa.min()
print("Dato mínimo:", minimo)
rango = maximo-minimo
print("Rango:", rango)

#Gráfico de Boxplot
q1 = np.quantile(tasa, q=0.25)
print("Cuartil 1:", q1)
q3 = np.quantile(tasa, q=0.75)
print("Mediana:", mediana)
print("Cuartil 3:", q3)
rango_intercuartil = q3- q1
print("Rango intercuartil", rango_intercuartil)
plt.boxplot(tasa)
plt.title("Diagrama de caja de las tasas")
plt.show()

"""En la gráfica anterior se puede ver una diagrama de cajas y bigotes con referencia a las tasas manejadas por 26 bancos en Colombia y agentes externos denotados bajo el N/A. La decisión de no excluirlo del análisis se da debido a que, se cuenta como agentes diferentes a los Bancos reconocidos pero que cumplen funciones similares, sean personas naturales u otro tipo de entidades. En el Box Plot, se ven los cuartiles principales: Q1: 17,34%, Q2/Mediana: 24,11% y Q3: 35,03%. Con esto en mente, se puede decir que las tasas empleadas por estos bancos estaban normalmente fluctuando entre el 17% y el 35% efectiva anual."""

#Frecuencia Absoluta Bancos
tipo_credito = list(df2["_4_tipo_de_cr_dito"])
banco = list(df2.index)
dic_banco = dict()
for i in banco:
    dic_banco[i]=dic_banco.get(i,0)+1

l_banco = list(dic_banco.keys())
num_banco = list(dic_banco.values())

plt.bar(l_banco,num_banco)
plt.title("Frecuencia absoluta por Banco")
plt.grid()
plt.xticks(rotation = 90)
plt.show()

"""En el gráfico anterior se identificaron las diferentes operaciones realizadas con cada uno de los bancos analizados en el estudio, así, sería posible concluir que el banco más usado según los datos es Bancolombia, con 179 operaciones de crédito, seguido del Banco de Bogotá con 87 y Banco Davivienda con 79. Por otra parte, los bancos con menos operaciones registradas fueron Lulo Bank y Citibank"""

#Relacionando Tipo de Crédito y Banco - Un tipo de tabla pivote manual, agrupación de Tipo de Crédito y NombreEntidad (Banco)
credito_por_banco= dict()
contador= 0
contador1 = 0
l_credito= list()

for i in num_banco:
    if contador == 0 and contador1== 0:
        lista = list(tipo_credito[contador:i])
        l_credito.append(lista)
    else:
        lista = list(tipo_credito[contador:contador+i])
        l_credito.append(lista)
    contador = contador + i

for i in range(len(l_banco)):
    credito_por_banco[l_banco[i]]= l_credito[i]

l_controlbanco = list()
for k,v in credito_por_banco.items():
    dic_tipocredito = dict()
    for i in v:
        dic_tipocredito[i]=dic_tipocredito.get(i,0)+1
    l_controlbanco.append(dic_tipocredito)
#print(l_controlbanco)

dic_controlbanco = dict()
for i in range(len(credito_por_banco.keys())):
    dic_controlbanco[l_banco[i]]= l_controlbanco[i]

for i in dic_controlbanco:
    keys = dic_controlbanco[i].keys()
    values = dic_controlbanco[i].values()
    plt.pie(values, labels=keys,autopct="%0.1f %%")
    #plt.xticks(rotation = 60)
    plt.title(i)
    plt.show()

"""En los gráficos anteriores se pueden ver los tipos de crédito más comunes entre los diferentes tipos de bancos analizados. De está forma se puede identificar cual es la actividad más recurrente entre cada uno de los bancos, siendo muy comunes los préstamos de Consumo, Comercial Ordinario y Microcrédito"""

#Tabla Pivote, Tasa de cada crédito según el Banco
df2["_8_tasa_efectiva_promedio"] = df2["_8_tasa_efectiva_promedio"].astype(float)
df2.pivot_table(index= "nombreentidad", columns= "_4_tipo_de_cr_dito", values= "_8_tasa_efectiva_promedio")